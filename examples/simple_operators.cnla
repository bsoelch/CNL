CNLA:0

% Arithmetic operations
OUT_LN_NUMBER NEG 1
VAR0 2
OUT_LN_NUMBER INC VAR0
OUT_LN_NUMBER DEC VAR0
OUT_LN_NUMBER VAR0
OUT_LN_NUMBER INV 2/3
OUT_LN_NUMBER ADD 1 24
OUT_LN_NUMBER SUBT 1 24
OUT_LN_NUMBER MULT 6 7
OUT_LN_NUMBER DIV -12 7
OUT_LN_NUMBER INT_DIV -12 7
OUT_LN_NUMBER REMAINDER -12 7
OUT_LN_NUMBER DIV_REM -12 7
OUT_LN_NUMBER POW 2 3
OUT_LN_NUMBER POW 2 -4
OUT_LN_NUMBER POW 1/2 2 %! the power has to be an integer
OUT_LN_NUMBER SGN 1
OUT_LN_NUMBER SGN 0
OUT_LN_NUMBER SGN -1
VAR0 CMPLX 1 2
OUT_LN_NUMBER SQ_ABS VAR0
OUT_LN_NUMBER SGN VAR0
OUT_LN_NUMBER VAR0
OUT_LN_NUMBER RE VAR0
OUT_LN_NUMBER IM VAR0
OUT_LN_NUMBER CONJ VAR0
OUT_LN_NUMBER NUM 1/2-(3/4)i
OUT_LN_NUMBER DEN 1/2-(3/4)i

%F_ADD "wrong" addition of Fractions F_ADD a/b c/d = (a+c)/(b+d)
OUT_LN_STR "F_ADD:"
OUT_LN_NUMBER F_ADD 1/2 1/3
OUT_LN_NUMBER F_ADD 1/2 -1/3
OUT_LN_NUMBER F_ADD 1 0

%BIT_LENGTH: Approximate log2
OUT_LN_STR "BIT_LENGTH:"
OUT_LN_NUMBER BIT_LENGTH 0
OUT_LN_NUMBER BIT_LENGTH 1
OUT_LN_NUMBER BIT_LENGTH -1
OUT_LN_NUMBER BIT_LENGTH 10
OUT_LN_NUMBER BIT_LENGTH 16/3
OUT_LN_NUMBER BIT_LENGTH 16/3-42i

%Logical Operations
OUT_LN_STR "Logic-Ops:"

OUT_LN_NUMBER NOT 4

OUT_LN_NUMBER AND 2.5 6
OUT_LN_NUMBER AND 6 2.5
OUT_LN_NUMBER OR 2.5 6
OUT_LN_NUMBER OR 6 2.5
OUT_LN_NUMBER XOR 2.5 6
OUT_LN_NUMBER XOR 6 2.5
OUT_LN_NUMBER AND_NOT 2.5 6
OUT_LN_NUMBER AND_NOT 6 2.5


%Comparison operators
OUT_LN_STR "Comparison-Ops:"
OUT_LN_NUMBER EQ 12 13
OUT_LN_NUMBER EQ 1 1
OUT_LN_NUMBER NE 1 1
OUT_LN_NUMBER NE 12 13
OUT_LN_NUMBER GT i 0
OUT_LN_NUMBER GT 1 1
OUT_LN_NUMBER GE 0 i
OUT_LN_NUMBER GE 0 0
OUT_LN_NUMBER GE 1 -1
OUT_LN_STR "Unary Comparison:"
    %1 if argument >0 0 otherwise
OUT_LN_NUMBER GT0 1
OUT_LN_NUMBER GT0 i
OUT_LN_NUMBER GT0 0
OUT_LN_NUMBER GT0 -1
    %1 if argument >=0 0 otherwise
OUT_LN_NUMBER GE0 1
OUT_LN_NUMBER GE0 i
OUT_LN_NUMBER GE0 0
OUT_LN_NUMBER GE0 -1
    %Minimum and Maximum of the next 2 values
OUT_LN_STR "Min,Max:"
OUT_LN_NUMBER MIN 1 -2
OUT_LN_NUMBER MAX 2 3
    %IF similar to ?: Operator in Java and C: IF <cond> <true-val> <false-val>
OUT_LN_STR "IF:"
OUT_LN_NUMBER IF 1 2 3
OUT_LN_NUMBER IF 0 1 2

%Rounding
OUT_LN_STR "Rounding:"
OUT_LN_NUMBER ROUND 3/2
OUT_LN_NUMBER ROUND -3/2

VAR0 -1376521/16384
OUT_LN_NUMBER_FIXED VAR0
OUT_LN_NUMBER FLOOR VAR0
OUT_LN_NUMBER ROUND VAR0
OUT_LN_NUMBER CEIL VAR0
    %Approximate Value <arg0> with an error of up to <arg1>
OUT_LN_STR "Approx:"
OUT_LN_NUMBER APPROX VAR0 1/2
OUT_LN_NUMBER APPROX VAR0 1/16
OUT_LN_NUMBER APPROX VAR0 1/1000
OUT_LN_NUMBER APPROX VAR0 1/10000

%GCD and LCM
OUT_LN_STR "GCD,LCM:"
OUT_LN_NUMBER GCD 6 7
OUT_LN_NUMBER GCD 42 24
OUT_LN_NUMBER LCM 6 7
OUT_LN_NUMBER LCM 42 24
OUT_LN_NUMBER GCD 1/2 1/3
OUT_LN_NUMBER LCM 1/2 1/3
